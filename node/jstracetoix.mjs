// --------------------------------------------------------------------
// Copyright (c) 2024 Alexandre Bento Freire. All rights reserved.
// Licensed under the MIT license
// --------------------------------------------------------------------
// Version: 1.1.0
import{threadId as C}from"worker_threads";var L=new SharedArrayBuffer(4),A=new Int32Array(L),y=!1,x=process.stdout,S=()=>y,R=t=>{y=t},I=t=>{x=t||x},B=t=>{x.write(t)},g=(t=void 0)=>t||C,m=()=>{for(;y&&Atomics.compareExchange(A,0,0,1)!==0;);},p=()=>{y&&Atomics.store(A,0,0)};var N={result:"{name}:`{value}`",input:"{name}:`{value}`",thread:"{id}: ",sep:" | ",new_line:!0},F=N,l={},h={},b=!0,v=({stream:t=void 0,multithreading:s=!1,format:o=N,enabled:r=!0}={})=>{m(),I(t),R(s),F=o,l={},h={},b=r,p()},$=(t=void 0,s=void 0)=>{b&&(m(),h[g(s)]=t||`t${Object.keys(h).length}`,p())},q=(t,s)=>{if(!b)return t;let{name:o=void 0,allow:r=void 0,level:u=0}=s||{};m();let d=g();for(l[d]||(l[d]=[{index__:0,meta__:["meta__","index__"]}]);l[d].length<=u;)l[d].push({index__:0,meta__:["meta__","index__"]});let _=l[d][u],n=_.index__,i=_.meta__.length,f=typeof o=="function"?o(n,Object.keys(_).length-i,t):o||`i${Object.keys(_).length-i}`,e=t,a=r;try{typeof r=="function"&&(a=r(n,f,t),typeof a!="boolean"&&(e=a,a=!0))}finally{(a===void 0||a)&&(_[f]=e),_.index__=n+1,p()}return t},W=(t,s={})=>{if(!b)return t;let{name:o="_",allow:r=void 0,before:u=void 0,after:d=void 0,inputs:_=void 0,format:n=void 0}=s||{};m();let i=g(),f=l[i]||[{}],e={...f[f.length-1],..._||{}};e.thread_id__=i,e.input_count__=e.index__||0,e.allow__=!0,e.meta__=[...e.meta__||["meta__"],"allow__","allow_input_count__","input_count__","thread_id__",o],e[o]=t,delete e.index__,e.meta__=e.meta__.filter(a=>a!=="index__"),e.allow_input_count__=Object.keys(e).length-e.meta__.length+1;try{if(typeof r=="function"&&(r=r(e),typeof r!="boolean"&&(e[o]=r,r=!0)),r!==!1){n=n||F;let a="";S()&&n.thread&&(a+=n.thread.replace("{id}",h[i]||`${i}`));let k=(c,T,w)=>c.replace("{name}",T).replace("{value}",typeof w=="object"?JSON.stringify(w):w);if(n.input)for(let c in e)e.meta__.includes(c)||(a+=k(n.input,c,e[c])+(n.sep||""));n.result&&(a+=k(n.result,o,e[o])),e.meta__+=["output__"],e.output__=a,(u===void 0||u(e))&&B(e.output__+(n.new_line?`
`:""))}else e.allow__=!1;d&&d(e)}finally{l[i]&&(l[i].pop(),l[i].length===0&&delete l[i]),p()}return t};export{N as DEFAULT_FORMAT,q as c__,W as d__,v as init__,$ as t__};
//# sourceMappingURL=jstracetoix.mjs.map
